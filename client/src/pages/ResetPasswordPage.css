.reset-password-page {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 70vh;
  padding: 2rem 1rem;
}

.reset-password-container {
  max-width: 568px;
  width: 100%;
  background-color: var(--color-card-bg);
  border-radius: 12px;
  box-shadow: 0 6px 20px var(--color-card-shadow);
  padding: 2.5rem;
  text-align: center;
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

.reset-password-container h1 {
  margin-bottom: 2rem;
  color: var(--color-text);
  transition: color 0.3s ease;
}

.reset-password-form-container {
  margin-top: 1.5rem;
}

.reset-password-form {
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
  margin: 2rem 0;
  text-align: left;
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-bottom: 1.5rem;
}

.form-group label {
  font-weight: 600;
  color: var(--color-text);
  font-size: 0.9rem;
  transition: color 0.3s ease;
}

.form-group input {
  width: 100%;
  padding: 1rem;
  border: 1px solid var(--color-border);
  border-radius: 8px;
  font-size: 1rem;
  background-color: var(--color-card-bg);
  color: var(--color-text);
  transition: border-color 0.3s ease, background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
}

.form-group input:focus {
  border-color: var(--color-primary);
  outline: none;
  box-shadow: 0 0 0 2px rgba(46, 125, 50, 0.2); /* Using primary color with transparency */
}

.input-error {
  border-color: var(--color-error) !important;
}

.error-message {
  background-color: #fff8f8; /* Lighter red background for Airbnb style */
  color: #ff385c; /* Airbnb-like red color */
  padding: 0.75rem;
  border-radius: 8px;
  margin-bottom: 1.5rem;
  font-size: 0.9rem;
  border: 1px solid #ffb4bc;
}

/* Password strength indicator */
.password-strength {
  margin-top: 1rem;
}

.password-strength-bar {
  height: 8px;
  background-color: #e9ecef;
  border-radius: 4px;
  overflow: hidden;
  margin-bottom: 0.5rem;
}

.password-strength-progress {
  height: 100%;
  border-radius: 4px;
  transition: width 0.3s ease, background-color 0.3s ease;
}

.password-strength-text {
  font-size: 0.875rem;
  text-align: right;
}

/* Password requirements */
.password-requirements {
  margin-top: 1rem;
  padding: 1rem;
  background-color: var(--color-card-bg-light);
  border-radius: 4px;
  font-size: 0.875rem;
}

.password-requirements p {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-weight: 600;
}

.password-requirements ul {
  margin: 0;
  padding-left: 1.5rem;
}

.password-requirements li {
  margin-bottom: 0.25rem;
  color: var(--color-text-muted);
}

.password-requirements li.met {
  color: var(--color-success);
}

.password-requirements li.met::before {
  content: 'âœ“ ';
}

.btn {
  display: inline-block;
  background-color: var(--color-button-bg);
  color: var(--color-button-text);
  padding: 1rem;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  text-align: center;
  cursor: pointer;
  transition: transform 0.1s ease, background-color 0.3s ease;
  text-decoration: none;
  margin-top: 0.75rem;
}

.btn:hover {
  background-color: var(--color-button-hover);
  transform: scale(1.01);
}

.btn:active {
  transform: scale(1);
}

.btn-primary {
  background-color: var(--color-button-bg);
  color: var(--color-button-text);
}

.btn-primary:hover {
  background-color: var(--color-button-hover);
}

.btn-secondary {
  background-color: var(--color-secondary);
  color: var(--color-button-text);
}

.btn-secondary:hover {
  background-color: var(--color-button-hover);
}

.btn:disabled {
  background-color: var(--color-border);
  color: var(--color-text);
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

.reset-password-links {
  margin-top: 1.5rem;
  font-size: 0.9rem;
}

.reset-password-links a {
  color: var(--color-primary);
  text-decoration: none;
}

.reset-password-links a:hover {
  text-decoration: underline;
}

/* Status styles */
.reset-password-status {
  margin-top: 2rem;
}

.reset-password-status.loading,
.reset-password-status.success,
.reset-password-status.error {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.spinner {
  width: 50px;
  height: 50px;
  border: 5px solid rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  border-top-color: var(--color-primary);
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.success-icon {
  width: 60px;
  height: 60px;
  background-color: var(--color-success);
  color: white;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  margin-bottom: 1rem;
}

.error-icon {
  width: 60px;
  height: 60px;
  background-color: var(--color-error);
  color: white;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  margin-bottom: 1rem;
}

.action-buttons {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-top: 2rem;
}

/* Responsive styles */
@media (max-width: 600px) {
  .reset-password-container {
    margin: 1.5rem;
    padding: 1.5rem;
    max-width: 100%;
  }

  .action-buttons {
    flex-direction: column;
    align-items: center;
    gap: 0.75rem;
  }

  .btn {
    width: 100%;
  }
}

/* We don't need fallback variables as they are defined in index.css */
/* This component uses the global theme variables */
