{
  "openapi": "3.0.0",
  "info": {
    "title": "MyanCamp API",
    "description": "API documentation for MyanCamp - a campground booking platform",
    "version": "1.0.0",
    "contact": {
      "name": "MyanCamp Support",
      "email": "support@myancamp.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api/v1",
      "description": "Development server"
    },
    {
      "url": "https://myancamp.com/api/v1",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Campgrounds",
      "description": "Campground operations"
    },
    {
      "name": "Reviews",
      "description": "Review operations"
    },
    {
      "name": "Users",
      "description": "User operations"
    },
    {
      "name": "Bookings",
      "description": "Booking operations"
    },
    {
      "name": "Admin",
      "description": "Admin operations"
    }
  ],
  "paths": {
    "/admin/dashboard": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get dashboard statistics",
        "description": "Returns statistics for the admin dashboard",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "userCount": {
                          "type": "number",
                          "example": 150
                        },
                        "campgroundCount": {
                          "type": "number",
                          "example": 45
                        },
                        "bookingCount": {
                          "type": "number",
                          "example": 230
                        },
                        "reviewCount": {
                          "type": "number",
                          "example": 180
                        },
                        "recentBookings": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Booking"
                          }
                        },
                        "recentUsers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Dashboard statistics retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/bookings": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all bookings",
        "description": "Returns a paginated list of all bookings",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by booking status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["confirmed", "pending", "cancelled", "completed"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "bookings": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Booking"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 45
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Bookings retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/bookings/{id}": {
      "delete": {
        "tags": ["Admin"],
        "summary": "Cancel a booking",
        "description": "Cancels a specific booking by ID",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Booking ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "booking": {
                          "$ref": "#/components/schemas/Booking"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Booking cancelled successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all users",
        "description": "Returns a paginated list of all users",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term for username or email",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 45
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Users retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get user details",
        "description": "Returns details for a specific user",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User details retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{id}/toggle-admin": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Toggle user admin status",
        "description": "Toggles the admin status of a specific user",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin status toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "isAdmin": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User admin status updated successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{id}/toggle-owner": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Toggle user owner status",
        "description": "Toggles the owner status of a specific user",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Owner status toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "isOwner": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User owner status updated successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owner-applications": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all owner applications",
        "description": "Returns a list of all owner applications",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by application status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "approved", "rejected", "under_review"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "applications": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OwnerApplication"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 2
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 15
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner applications retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owner-applications/{id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get owner application details",
        "description": "Returns details for a specific owner application",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "application": {
                          "$ref": "#/components/schemas/OwnerApplication"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner application details retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owner-applications/{id}/approve": {
      "post": {
        "tags": ["Admin"],
        "summary": "Approve owner application",
        "description": "Approves a specific owner application",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string",
                    "example": "Application approved after verification of business documents."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application approved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "application": {
                          "$ref": "#/components/schemas/OwnerApplication"
                        },
                        "owner": {
                          "$ref": "#/components/schemas/Owner"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner application approved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owner-applications/{id}/reject": {
      "post": {
        "tags": ["Admin"],
        "summary": "Reject owner application",
        "description": "Rejects a specific owner application",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "example": "Incomplete documentation provided."
                  }
                },
                "required": ["reason"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application rejected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "application": {
                          "$ref": "#/components/schemas/OwnerApplication"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner application rejected successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owner-applications/{id}/review": {
      "post": {
        "tags": ["Admin"],
        "summary": "Update application review",
        "description": "Updates the review status and notes for a specific owner application",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "under_review"],
                    "example": "under_review"
                  },
                  "notes": {
                    "type": "string",
                    "example": "Requested additional documentation."
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application review updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "application": {
                          "$ref": "#/components/schemas/OwnerApplication"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner application review updated successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owners": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all owners",
        "description": "Returns a paginated list of all owners",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by owner status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "suspended", "pending_verification"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "owners": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Owner"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 3
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 25
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owners retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owners/{id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get owner details",
        "description": "Returns details for a specific owner",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Owner ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "$ref": "#/components/schemas/Owner"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner details retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owners/{id}/suspend": {
      "post": {
        "tags": ["Admin"],
        "summary": "Suspend owner",
        "description": "Suspends a specific owner",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Owner ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "example": "Violation of terms of service."
                  }
                },
                "required": ["reason"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Owner suspended successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "$ref": "#/components/schemas/Owner"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner suspended successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owners/{id}/reactivate": {
      "post": {
        "tags": ["Admin"],
        "summary": "Reactivate owner",
        "description": "Reactivates a suspended owner",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Owner ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string",
                    "example": "Owner has resolved the issues."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Owner reactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "$ref": "#/components/schemas/Owner"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner reactivated successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owners/{id}/verify": {
      "post": {
        "tags": ["Admin"],
        "summary": "Verify owner",
        "description": "Verifies a pending owner",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Owner ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string",
                    "example": "All documentation verified."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Owner verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "$ref": "#/components/schemas/Owner"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner verified successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/owners/{id}/revoke": {
      "post": {
        "tags": ["Admin"],
        "summary": "Revoke owner status",
        "description": "Revokes owner status from a user",
        "security": [
          {
            "cookieAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Owner ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "example": "Repeated violations of platform policies."
                  }
                },
                "required": ["reason"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Owner status revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "$ref": "#/components/schemas/Owner"
                        },
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Owner status revoked successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/campgrounds": {
      "get": {
        "tags": ["Campgrounds"],
        "summary": "Get all campgrounds",
        "description": "Returns a list of all campgrounds and distinct locations",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "campgrounds": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Campground"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Campgrounds retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Campgrounds"],
        "summary": "Create a new campground",
        "description": "Creates a new campground with the provided data",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "campground": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "example": "Inle Lake Campground"
                      },
                      "location": {
                        "type": "string",
                        "example": "Inle Lake, Shan State, Myanmar"
                      },
                      "description": {
                        "type": "string",
                        "example": "A beautiful campground by the lake"
                      },
                      "price": {
                        "type": "number",
                        "example": 20
                      }
                    },
                    "required": ["title", "location", "description", "price"]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "campground[title]": {
                    "type": "string",
                    "example": "Inle Lake Campground"
                  },
                  "campground[location]": {
                    "type": "string",
                    "example": "Inle Lake, Shan State, Myanmar"
                  },
                  "campground[description]": {
                    "type": "string",
                    "example": "A beautiful campground by the lake"
                  },
                  "campground[price]": {
                    "type": "number",
                    "example": 20
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Campground created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "campground": {
                          "$ref": "#/components/schemas/Campground"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Campground created successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/campgrounds/search": {
      "get": {
        "tags": ["Campgrounds"],
        "summary": "Search campgrounds",
        "description": "Search for campgrounds by title",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search term",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "campgrounds": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Campground"
                          }
                        },
                        "searchTerm": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Found 2 campgrounds matching \"lake\""
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/campgrounds/{id}": {
      "get": {
        "tags": ["Campgrounds"],
        "summary": "Get a specific campground",
        "description": "Returns a specific campground by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Campground ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "campground": {
                          "$ref": "#/components/schemas/Campground"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Campground retrieved successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campground not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Campgrounds"],
        "summary": "Update a campground",
        "description": "Updates a specific campground by ID",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Campground ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "campground": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "example": "Updated Campground Title"
                      },
                      "location": {
                        "type": "string",
                        "example": "Updated Location"
                      },
                      "description": {
                        "type": "string",
                        "example": "Updated description"
                      },
                      "price": {
                        "type": "number",
                        "example": 25
                      }
                    }
                  },
                  "deleteImages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "campground[title]": {
                    "type": "string",
                    "example": "Updated Campground Title"
                  },
                  "campground[location]": {
                    "type": "string",
                    "example": "Updated Location"
                  },
                  "campground[description]": {
                    "type": "string",
                    "example": "Updated description"
                  },
                  "campground[price]": {
                    "type": "number",
                    "example": 25
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "deleteImages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Campground updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "campground": {
                          "$ref": "#/components/schemas/Campground"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Campground updated successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Campground not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Campgrounds"],
        "summary": "Delete a campground",
        "description": "Deletes a specific campground by ID",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Campground ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campground deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "null"
                    },
                    "message": {
                      "type": "string",
                      "example": "Campground deleted successfully"
                    },
                    "error": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Campground not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "isAdmin": {
            "type": "boolean",
            "example": false
          },
          "isOwner": {
            "type": "boolean",
            "example": false
          },
          "isEmailVerified": {
            "type": "boolean",
            "example": true
          },
          "isTwoFactorEnabled": {
            "type": "boolean",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-23T10:15:18.000Z"
          }
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2023-07-15"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2023-07-20"
          },
          "totalPrice": {
            "type": "number",
            "example": 250
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "cancelled", "completed"],
            "example": "confirmed"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c85"
              },
              "username": {
                "type": "string",
                "example": "johndoe"
              },
              "email": {
                "type": "string",
                "example": "john@example.com"
              }
            }
          },
          "campground": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c85"
              },
              "title": {
                "type": "string",
                "example": "Inle Lake Campground"
              },
              "location": {
                "type": "string",
                "example": "Inle Lake, Shan State, Myanmar"
              }
            }
          },
          "campsite": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c85"
              },
              "name": {
                "type": "string",
                "example": "Lakeside Tent Spot #3"
              },
              "price": {
                "type": "number",
                "example": 50
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-01T10:15:18.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-01T10:15:18.000Z"
          }
        }
      },
      "Owner": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c85"
              },
              "username": {
                "type": "string",
                "example": "johndoe"
              },
              "email": {
                "type": "string",
                "example": "john@example.com"
              }
            }
          },
          "businessName": {
            "type": "string",
            "example": "John's Camping Adventures"
          },
          "businessType": {
            "type": "string",
            "enum": ["individual", "company", "partnership", "non_profit"],
            "example": "individual"
          },
          "businessAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "123 Main St"
              },
              "city": {
                "type": "string",
                "example": "Yangon"
              },
              "state": {
                "type": "string",
                "example": "Yangon Region"
              },
              "zipCode": {
                "type": "string",
                "example": "11181"
              },
              "country": {
                "type": "string",
                "example": "Myanmar"
              }
            }
          },
          "businessPhone": {
            "type": "string",
            "example": "+95123456789"
          },
          "businessEmail": {
            "type": "string",
            "example": "business@example.com"
          },
          "verificationStatus": {
            "type": "string",
            "enum": ["pending", "verified", "suspended", "rejected"],
            "example": "verified"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-15T10:15:18.000Z"
          },
          "verifiedBy": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "suspendedAt": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "suspendedBy": {
            "type": "string",
            "example": null
          },
          "suspensionReason": {
            "type": "string",
            "example": null
          },
          "verificationNotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "note": {
                  "type": "string",
                  "example": "All documentation verified."
                },
                "addedBy": {
                  "type": "string",
                  "example": "60d21b4667d0d8992e610c85"
                },
                "type": {
                  "type": "string",
                  "enum": ["admin_note", "system_note", "user_note"],
                  "example": "admin_note"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-06-15T10:15:18.000Z"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-01T10:15:18.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-15T10:15:18.000Z"
          }
        }
      },
      "OwnerApplication": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c85"
              },
              "username": {
                "type": "string",
                "example": "johndoe"
              },
              "email": {
                "type": "string",
                "example": "john@example.com"
              }
            }
          },
          "businessName": {
            "type": "string",
            "example": "John's Camping Adventures"
          },
          "businessType": {
            "type": "string",
            "enum": ["individual", "company", "partnership", "non_profit"],
            "example": "individual"
          },
          "businessAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "123 Main St"
              },
              "city": {
                "type": "string",
                "example": "Yangon"
              },
              "state": {
                "type": "string",
                "example": "Yangon Region"
              },
              "zipCode": {
                "type": "string",
                "example": "11181"
              },
              "country": {
                "type": "string",
                "example": "Myanmar"
              }
            }
          },
          "businessPhone": {
            "type": "string",
            "example": "+95123456789"
          },
          "businessEmail": {
            "type": "string",
            "example": "business@example.com"
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["id", "business_license", "tax_certificate", "other"],
                  "example": "business_license"
                },
                "url": {
                  "type": "string",
                  "example": "https://res.cloudinary.com/dlvtzyb7j/image/upload/v1624456518/MyanCamp/documents/license_xyzabc.jpg"
                },
                "filename": {
                  "type": "string",
                  "example": "MyanCamp/documents/license_xyzabc"
                },
                "description": {
                  "type": "string",
                  "example": "Business license issued by Yangon City Development Committee"
                }
              }
            }
          },
          "status": {
            "type": "string",
            "enum": ["pending", "under_review", "approved", "rejected"],
            "example": "pending"
          },
          "reviewNotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "note": {
                  "type": "string",
                  "example": "Requested additional documentation."
                },
                "addedBy": {
                  "type": "string",
                  "example": "60d21b4667d0d8992e610c85"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-06-10T10:15:18.000Z"
                }
              }
            }
          },
          "rejectionReason": {
            "type": "string",
            "example": null
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "approvedBy": {
            "type": "string",
            "example": null
          },
          "rejectedAt": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "rejectedBy": {
            "type": "string",
            "example": null
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-01T10:15:18.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-10T10:15:18.000Z"
          }
        }
      },
      "Campground": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "title": {
            "type": "string",
            "example": "Inle Lake Campground"
          },
          "price": {
            "type": "number",
            "example": 20
          },
          "description": {
            "type": "string",
            "example": "A beautiful campground by the lake"
          },
          "location": {
            "type": "string",
            "example": "Inle Lake, Shan State, Myanmar"
          },
          "geometry": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "Point"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [96.9102, 20.5862]
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "example": "https://res.cloudinary.com/dlvtzyb7j/image/upload/v1624456518/MyanCamp/campground1_xyzabc.jpg"
                },
                "filename": {
                  "type": "string",
                  "example": "MyanCamp/campground1_xyzabc"
                }
              }
            }
          },
          "author": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c85"
              },
              "username": {
                "type": "string",
                "example": "admin"
              }
            }
          },
          "reviews": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "60d21b4667d0d8992e610c85"
                },
                "body": {
                  "type": "string",
                  "example": "Great place to stay!"
                },
                "rating": {
                  "type": "number",
                  "example": 5
                },
                "author": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "60d21b4667d0d8992e610c85"
                    },
                    "username": {
                      "type": "string",
                      "example": "user123"
                    }
                  }
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-23T10:15:18.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-23T10:15:18.000Z"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "data": {
            "type": "null"
          },
          "message": {
            "type": "string",
            "example": "An error occurred while processing your request"
          },
          "error": {
            "type": "string",
            "example": "Campground not found"
          }
        }
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "session"
      }
    }
  }
}
